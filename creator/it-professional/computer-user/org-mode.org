* Examples from manual and guide
** Document structure
*** Headlines
**** Third level headline
*** Visibility
**** Initial visibility
#+STARTUP: overview
#+STARTUP: content
#+STARTUP: showall
#+STARTUP: showeverything
**** Catching invisible edits
Set org-catch-invisible-edits to non-nil

*** Plain lists
My favorite scenes are (in this order)
1. The attack of the Rohirrim
2. Eowyn's fight with the witch king
   + this was already my favorite scene in the book
   + I really like Miranda Otto.
3. Peter Jackson being shot by Legolas
   - on DVD only
   He makes a really funny face when it happens.
But in the end, no individual scenes matter but the film as a whole.
Important actors in this film are:
- Elijah Wood :: He plays Frodo
- Sean Astin :: He plays Sam, Frodo's friend. I still remember him
     very well from his role as Mikey Walsh in /The Goonies/.

*** Drawers
Still outside the drawer
:DRAWERNAME:
This is inside the drawer.
It can be multiple lines
:END:
After the drawer.

*** Blocks
    Blocks are like this:
    #+BEGIN_SRC
    This is inside the block
    #+END_SRC
    To fold and unfold blocks, press TAB on the BEGIN line

*** Footnotes
    Footnotes can be named[fn:NAME] or numbered, and inline or defined seperately[fn:2]. Numbered footnotes can be
    renumbered and sorted automatically. The footnote action command is C-c C-x f
    *examples*:
    [fn:1: first inline footnote]
    [fn:: anonymus inline footnote]
[fn:NAME] Named footnote defined seperately, there must be no indentation
[fn:2] This footnote is defined seperately

** Tables
   | Name  | Phone | Age |
   |-------+-------+-----|
   | Peter |  1234 |  17 |
   | Anna  |  4321 |  25 |
** Hyperlinks
*** Links
    *format*: [[link] [description]] (without the space)
    *example*: [[link][description]]
    To edit the invisible ‘link’ part, use C-c C-l with the cursor on the link.
    To follow the link, use C-c C-o
    To go back, use C-c &
    To save position, use C-c %
**** Internal links
     :PROPERTIES:
     :CUSTOM_ID: internal-links
     :END:
     If the link does not look like a URL, it is considered to be internal in the current file.
     The most important case is a link like ‘[[#my-custom-id]]’ which will link to the entry with the
     CUSTOM_ID property ‘my-custom-id’.
     *example*: [[#internal-links][Internal links]]
     Links such as ‘[[My Target]]’ or ‘[[My Target][Find my target]]’ lead to a text search in the current file for
     the corresponding target which looks like ‘<<My Target>>’.
**** External links
     Links can be external, we can link to websites, files, etc, you can find all the examples here:
     [[https://orgmode.org/guide/External-links.html#External-links][External link examples]]
     [[nihongo.org][This is a link to the japanese language notes]]
     If the description is a file name or URL that points to an image, HTML export (see [[https://orgmode.org/guide/HTML-export.html#HTML-export][HTML export]])
     will inline the image as a clickable button. If there is no description at all and the link
     points to an image, that image will be inlined into the exported HTML file.
**** Targeted links
     *examples*:
     - [[file:~/code/main.c::255]]                 Find line 255
     - [[file:~/xx.org::My Target]]                Find ‘<<My Target>>’
     - [[file:~/xx.org::#my-custom-id]]            Find entry with custom id
** ToDo Items
*** ToDo items
**** TODO this is an example todo
    To rotate todo state, press C-c C-t, or Shift-Left/Right
    C-c / t to open only the todos in a sparse tree
    C-c a t to show global todo list
*** Multi-state workflows
    To set sequential work in progress states, put the following into your emacs config:
#+BEGIN_SRC emacs-lisp
(setq org-todo-keywords
  '((sequence "TODO" "FEEDBACK" "VERIFY" "|" "DONE" "DELEGATED")))
#+END_SRC
    The separator is to separate the todo and done states. You can also have many different workflows, with keyboard
    shortcuts, like here
#+BEGIN_SRC emacs-lisp
(setq org-todo-keywords
      '((sequence "TODO(t)" "|" "DONE(d)")
        (sequence "REPORT(r)" "BUG(b)" "KNOWNCAUSE(k)" "|" "FIXED(f)")))
#+END_SRC
    To define these for only a single file, use directives like this:
    #+TODO: TODO(t) | DONE(d)
    #+TODO: REPORT(r) BUG(b) KNOWNCAUSE(k) | FIXED(f)
    #+TODO: | CANCELED(c)
    To reread the local setup (like above), use C-c C-c
**** KNOWNCAUSE example
*** Progress logging
**** Clocking work time
     - Start the clock :: C-c C-x C-i
     - Stop the clock :: C-c C-x C-o (will also stop if you mark task DONE)
     - Update effort estimate for current task :: C-c C-x C-e
     - Cancel current clock :: C-c C-x C-j
     - Insert clock report :: C-c C-x C-r
     - Update clock report :: C-c C-c
**** Example
***** DONE this is a todo
      :LOGBOOK:
      CLOCK: [2019-07-30 Tue 17:24]--[2019-07-30 Tue 17:25] =>  0:01
      :END:
      Working working
**** Closing items
     To keep track of when the TODO was finished
#+BEGIN_SRC emacs-lisp
(setq org-log-done 'time)
#+END_SRC
     or
     #+STARTUP: logdone
     To also record a note along the timestamp
#+BEGIN_SRC emacs-lisp
(setq org-log-done 'note)
#+END_SRC
     or
     #+STARTUP: lognotedone
**** Tracking state changes
     #+TODO: TODO(t) WAIT(w@/!) | DONE(d!) CANCELED(c@)
     Will define TODO keywords and fast access keys, and also request that a time is recorded
     when the entry is set to DONE, and that a note is recorded when switching to WAIT or CANCELED.
     The same syntax works also when setting org-todo-keywords.
*** Priorities
**** TODO [#A] example high priority todo
     - Set priority :: C-c
     - Inc/dec priority :: Shift-Up/Down
*** Breaking tasks down into subtasks
    Put [%] or [/] to track progress
**** TODO Example epic [50%]
***** TODO First BLI [2/3]
****** TODO subtask 1
****** DONE subtask 2
****** DONE subtask 3
***** DONE Second BLI
*** Checkboxes
    You can also break down tasks with checkboxes, and make checkboxes out of plain lists with [ ]
    - Toggle checkbox status :: C-c C-c
    - Insert new item with checkbox :: M-S-RET
    - [ ] Example :: todo
    - [X] 1 :: [3/3]
      - [X] 1/1 ::
      - [X] 1/2 ::
      - [X] 1/3 :: 
    - [-] 2 :: [33%]
      - [X] 2/1 ::
      - [ ] 2/2 ::
      - [ ] 2/3 :: 
** Tags
   Every headline can contain a list of tags; they occur at the end of the headline. Tags are normal
   words containing letters, numbers, ‘_’, and ‘@’. Tags must be preceded and followed by a single colon,
   e.g., ‘:work:’. Several tags can be specified, as in ‘:work:urgent:’. Tags will by default be in bold
   face with the same color as the headline.
*** Tag inheritance
    Tags are inherited through subheadings

    * Meeting with the French group      :work:
    ** Summary by Frank                  :boss:notes:
    *** TODO Prepare slides for him      :action:

    For a file level tag:
    #+FILETAGS: :Peter:Boss:Secret:
*** Setting tags
    - Enter new tags for headline :: C-c C-q (or C-c C-c standing on headline)
*** Tag groups
    In a set of mutually exclusive tags, the first tag can be defined as a group tag. When you search for
    a group tag, it will return matches for all members in the group. In an agenda view, filtering by a
    group tag will display headlines tagged with at least one of the members of the group. This makes tag
    searches and filters even more flexible.
    You can set group tags by inserting a colon between the group tag and other tags, like this: 
    #+TAGS: { @read : @read_book  @read_ebook }
*** Tag searches
    [[https://orgmode.org/guide/Tag-searches.html#Tag-searches][Tag searches]]
** Properties
   * CD collection
   ** Classic
   *** Goldberg Variations
      :PROPERTIES:
      :Title:     Goldberg Variations
      :Composer:  J.S. Bach
      :Publisher: Deutsche Grammophon
      :NDisks:    1
      :END:
    You may define the allowed values for a particular property ‘:Xyz:’ by setting a property
    ‘:Xyz_ALL:’. This special property is inherited, so if you set it in a level 1 entry, it
    will apply to the entire tree.
      :PROPERTIES:
      :NDisks_ALL:  1 2 3 4
      :Publisher_ALL: "Deutsche Grammophon" Philips EMI
      :END:
    Or file wide:
      #+PROPERTY: NDisks_ALL 1 2 3 4
    - Set property :: C-c C-x p
    - Remove property :: C-c C-c d
    Properties can be searched like tags, see above
** Timestamps
*** Formats
**** Plain timestamp
    <2006-11-01 Wed 19:15>
    <2006-11-02 Thu 20:00-22:00>
**** Repeater interval
    <2007-05-16 Wed 12:30 +1w>
**** Diary style sexp entries
***** The nerd meeting on every 2nd Thursday of the month
     <%%(diary-float t 4 2)>
**** Date range
    <2004-08-23 Mon>--<2004-08-26 Thu>
**** Inactive timestamp
    [2006-11-01 Wed]
*** Key bindings
    - Prompt and insert timestamp :: C-c .
    - Insert inactive timestamp :: C-c !
    - Change date by one day :: S-left/right
    - Change item under cursor :: S-up/down
    - Insert timestamp as deadline :: C-c C-d
    - Insert timestamp as scheduled :: C-c C-s
*** Keywords
**** TODO task with a deadline
     DEADLINE: <2019-08-20 Tue>
     Will give warning org-deadline-warning-days before in agenda
**** TODO Scheduled task
     Planning to start working on that task on the given date
     SCHEDULED: <2019-08-22 Thu>
*** Clocking work time
    - Start the clock :: C-c C-x C-i
    - Stop the clock :: C-c C-x C-o (will also stop if you mark task DONE)
    - Update effort estimate for current task :: C-c C-x C-e
    - Cancel current clock :: C-c C-x C-j
    - Insert clock report :: C-c C-x C-r
    - Update clock report :: C-c C-c
** Capture - Refile - Archive
*** Capture
**** Setting up a capture location
     Set up a default target file for notes
#+BEGIN_SRC emacs-lisp
(setq org-default-notes-file (concat org-directory "/notes.org"))
(define-key global-map "\C-cc" 'org-capture)
#+END_SRC
**** Using capture
     - Start capture process :: C-c c
     - Stop capture process :: C-c C-c
     - Finalize, move entry to refile location :: C-c C-w
     - Abort capture process :: C-c C-k
**** Capture templates
     Example templates
#+BEGIN_SRC emacs-lisp
(setq org-capture-templates
 '(("t" "Todo" entry (file+headline "~/org/gtd.org" "Tasks")
        "* TODO %?\n  %i\n  %a")
   ("j" "Journal" entry (file+datetree "~/org/journal.org")
        "* %?\nEntered on %U\n  %i\n  %a")))
#+END_SRC
     When you call M-x org-capture, Org will prompt for a key to select the template
     Example escapes:
     %a          annotation, normally the link created with org-store-link
     %i          initial content, the region when capture is called with C-u.
     %t, %T      timestamp, date only, or date and time
     %u, %U      like above, but inactive timestamps
*** Refile and copy
    [[https://orgmode.org/guide/Refile-and-copy.html#Refile-and-copy][Refile section in Guide]]
*** Archive
    [[https://orgmode.org/guide/Archiving.html#Archiving][Archive section in Guide]]
** Agenda
*** Keybindings
    - Add current file to the list of agenda files :: C-c [
    - Remove current file to the list of agenda files :: C-c ]
    - Cycle through agenda file list :: C-,
    - Bring up agenda buffer :: C-c a
*** Commands in agenda buffer
    - Change todo state :: t
    - Display original location in other window :: SPC
    - Display original location in other window and jump there :: TAB
    - Open original location in current window :: RET
    - Close other windows :: o
    - Refresh buffer :: r
    - Start clock on todo item :: S-i
    - Stop current clock :: S-o
